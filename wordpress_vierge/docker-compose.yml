version: '3.8'

services:
    nomDeService1:
      image: mysql:5.7
      container_name: monConteneur1
      volumes:
        - base_de_donnees_container1:/var/lib/mysql # volume persistant geré par docker
      restart: always # redemarre le conteneur en cas de plantage
      environment:
        MYSQL_ROOT_PASSWORD: zfvferzbvervREZVERGZRV34 # any random string will do
        MYSQL_DATABASE: nomQueJeVeux # the name of your mysql database
        MYSQL_USER: userName # the name of the database user
        MYSQL_PASSWORD: password # the password of the mysql user
      labels:
        - traefik.enable=false # desactive le reverse proxy pour ce service
      networks:
        - web # container accessible depuis le réseau web

    wp:
      depends_on:
        - nomDeService1 # dépend du service nomDeService1 donc demarre apres
      image: wordpress:latest # we're using the image with php7.1
      container_name: monConteneur2
      read_only: false # we need to be able to write to the wordpress directory
      expose:
        - 80 # expose le port 80 du container
      restart: always # restart the container if it crashes
      links:
        - nomDeService1:nomDeService1 # permet de se connecter au service nomDeService1 depuis le service wp
      volumes:
        - volume_wordpress:/var/www/html # volume persistant geré par docker (le nom du volume que tu veux)
        - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini # chargement du fichier de modification uploads
      environment:
        WORDPRESS_DB_HOST: # nom du service nomDeService1
        WORDPRESS_DB_PASSWORD: # mot de passe de la base de donnée
        WORDPRESS_DB_USER: # nom d'utilisateur de la base de donnée
        WORDPRESS_DB_NAME: # nom de la base de donnée
        WORDPRESS_TABLE_PREFIX: # prefixe des tables de la base de donnée
    labels:
      - traefik.http.routers.nomDeMaRegle1.rule=Host(`monURL.fr`, `www.monURL.fr`) #nom de la règle (generalement le nom du container) configuration du domaine
      - traefik.http.routers.nomDeMaRegle2.tls=true #nom de la règle (generalement le nom du container) configuration du https
      - traefik.http.routers.nomDeMaRegle3.tls.certresolver=lets-encrypt #nom de la règle (generalement le nom du container) configuration du certificat
      - traefik.port=80 #port liaison traefik
    networks:
      - web #nom du réseau interne docker

networks:
  web:
    external: true #reseaux interne docker non créé par docker-compose

volumes:
  nom_volume_db:
  nom_volume_wp: